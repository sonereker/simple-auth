syntax = "proto3";
option go_package = "github.com/sonereker/simple-auth/pb";
package users;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "SimpleAuth";
    version: "1.0";
    contact: {
      name: "Soner Eker";
      url: "https://github.com/sonereker/simple-auth";
      email: "soner@sonereker.com";
    };
    license: {
      name: " Unlicense License";
      url: "https://github.com/sonereker/simple-auth/blob/main/LICENSE";
    };
  };

  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service UserService {
  rpc Register(RegistrationRequest) returns (AuthenticationResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }
  rpc Login(LoginRequest) returns (AuthenticationResponse) {
    option (google.api.http) = {
      post: "/v1/users/login"
      body: "*"
    };
  }
  rpc GetCurrent(Empty) returns (UserResponse) {
    option (google.api.http) = {
      get: "/v1/users/current"
    };
  }
}

message Empty {}

message RegistrationRequest {
  string email = 1;
  string password = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message UserResponse {
  string email = 1;
}

message AuthenticationResponse {
  string token = 1;
  UserResponse user = 2;
}
